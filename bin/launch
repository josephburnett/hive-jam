#!/usr/bin/env bash

set -e

if [ "$(whoami)" != "root" ]; then
    echo "Please run as root (sudo)."
    exit 1
fi

ADMIN_PASSWORD=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

cat > ~/darkice.cfg <<EOF
[general]
duration      = 0
bufferSecs    = 1 # This doesn't seem to be effective !?

[input]
device        = jack
sampleRate    = 48000
bitsPerSample = 16
channel       = 2
jackClientName = sonicjam

[icecast2-0]
bitrateMode   = cbr
format        = mp3
bitrate       = 128
server        = ${INTERNAL_IP?}
port          = 8000
password      = ${ADMIN_PASSWORD?}
mountPoint    = sonicjam
name          = Sonic Jam
description   = A loop-oriented, multi-player framework for making music with Sonic Pi.
url           = http://${INTERNAL_IP?}
genre         = edm
public        = no
EOF

cat > /etc/icecast2/icecast.xml <<EOF
<icecast>
    <location>Earth</location>
    <admin>icemaster@localhost</admin>
    <limits>
        <clients>100</clients>
        <sources>2</sources>
        <queue-size>524288</queue-size>
        <client-timeout>30</client-timeout>
        <header-timeout>15</header-timeout>
        <source-timeout>10</source-timeout>
        <burst-on-connect>0</burst-on-connect>
        <burst-size>65535</burst-size>
    </limits>
    <authentication>
        <source-password>${ADMIN_PASSWORD?}</source-password>
        <relay-password>${ADMIN_PASSWORD?}</relay-password>
        <admin-user>admin</admin-user>
        <admin-password>${ADMIN_PASSWORD?}</admin-password>
    </authentication>
    <hostname>${EXTERNAL_IP?}</hostname>
    <listen-socket>
        <port>8000</port>
        <bind-address>${INTERNAL_IP?}</bind-address>
    </listen-socket>
    <http-headers>
        <header name="Access-Control-Allow-Origin" value="*" />
    </http-headers>
    <fileserve>0</fileserve>
    <paths>
        <basedir>/usr/share/icecast2</basedir>
        <logdir>/var/log/icecast2</logdir>
        <webroot>/usr/share/icecast2/web</webroot>
        <adminroot>/usr/share/icecast2/admin</adminroot>
        <alias source="/" destination="/status.xsl"/>
    </paths>
    <logging>
        <accesslog>access.log</accesslog>
        <errorlog>error.log</errorlog>
        <loglevel>4</loglevel> <!-- 4 Debug, 3 Info, 2 Warn, 1 Error -->
        <logsize>10000</logsize> <!-- Max size of a logfile -->
    </logging>
    <security>
        <chroot>1</chroot>
        <changeowner>
            <user>nobody</user>
            <group>nogroup</group>
        </changeowner>
    </security>
</icecast>
EOF

STATE_FILE=$( mktemp )
echo "Using state file ${STATE_FILE?}"

trap "tac /tmp/sonicjam.pid | xargs -L 1 kill; rm ${STATE_FILE?}" SIGINT SIGTERM

jackd -d dummy & echo $! > /tmp/sonicjam.pid
sleep 1

/etc/init.d/icecast2 restart
sleep 1

darkice -c ~/darkice.cfg & echo $! >> /tmp/sonicjam.pid
sleep 1

ruby /usr/lib/sonic-pi/server/bin/sonic-pi-server.rb & echo $! >> /tmp/sonicjam.pid
sleep 5

jack_connect SuperCollider:out_1 sonicjam:left
jack_connect SuperCollider:out_2 sonicjam:right

build/sonic-jam \
    --ui_ip ${INTERNAL_IP?} \
    --ui_external_ip ${EXTERNAL_IP} \
    --verbose \
    --state_file ${STATE_FILE?}

